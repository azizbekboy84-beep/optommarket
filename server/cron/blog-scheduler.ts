import * as cron from 'node-cron';
import { generateBlogPost } from '../services/ai-content-generator';
import { sendBlogPostToChannel } from '../services/telegram-bot';
import type { IStorage } from '../storage';

let isSchedulerActive = false;

// Blog post yaratish va saqlash funksiyasi
async function createAndSaveBlogPost(storage: IStorage, language: 'uz' | 'ru' = 'uz'): Promise<void> {
  try {
    console.log(`${language.toUpperCase()} tilida yangi blog post yaratilmoqda...`);
    
    // AI orqali kontent yaratish
    const blogContent = await generateBlogPost(language, storage);
    
    // Ma'lumotlar bazasiga saqlash
    const blogPost = await storage.createBlogPost({
      title: blogContent.title,
      content: blogContent.content,
      excerpt: blogContent.excerpt,
      slug: blogContent.slug,
      tags: blogContent.tags,
      language: language,
      isAutoGenerated: true,
      source: 'AI-Generator',
      isPublished: true,
      imageUrl: null
    });

    console.log(`Blog post yaratildi va saqlandi: ${blogPost.title}`);

    // Telegram kanaliga yuborish
    try {
      await sendBlogPostToChannel(blogPost);
      console.log('Blog post Telegram kanaliga yuborildi');
    } catch (telegramError) {
      console.error('Telegram kanaliga yuborishda xatolik:', telegramError);
      // Blog post yaratilgan, lekin Telegram'ga yuborilmagan
      // Bu xatolikni loglaymiz, lekin umumiy jarayonni to'xtatmaymiz
    }

  } catch (error) {
    console.error('Blog post yaratishda xatolik:', error);
    throw error;
  }
}

// Yangi mahsulotlarni tekshirish va yuborish
async function checkAndSendNewProducts(storage: IStorage): Promise<void> {
  try {
    // Bugungi yangi mahsulotlarni olish
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    const allProducts = await storage.getProducts();
    const newProducts = allProducts.filter(product => {
      if (!product.createdAt) return false;
      const productDate = new Date(product.createdAt);
      productDate.setHours(0, 0, 0, 0);
      return productDate.getTime() === today.getTime();
    });

    if (newProducts.length > 0) {
      console.log(`${newProducts.length} ta yangi mahsulot topildi`);
      
      // Har bir yangi mahsulotni Telegram'ga yuborish
      for (const product of newProducts) {
        try {
          const { sendProductToChannel } = await import('../services/telegram-bot');
          await sendProductToChannel(product);
          
          // Mahsulotlar orasida 5 soniya kutish
          await new Promise(resolve => setTimeout(resolve, 5000));
        } catch (error) {
          console.error(`Mahsulotni yuborishda xatolik: ${product.nameUz}`, error);
        }
      }
    } else {
      console.log('Bugun yangi mahsulotlar qo\'shilmagan');
      
      // Agar yangi mahsulotlar bo'lmasa, tasodifiy mahsulotni "tavsiya" sifatida yuborish
      const featuredProducts = allProducts.filter(p => p.isFeatured && p.isActive);
      if (featuredProducts.length > 0) {
        const randomProduct = featuredProducts[Math.floor(Math.random() * featuredProducts.length)];
        
        try {
          const { sendProductToChannel } = await import('../services/telegram-bot');
          await sendProductToChannel(randomProduct);
          console.log(`Tavsiya etilgan mahsulot yuborildi: ${randomProduct.nameUz}`);
        } catch (error) {
          console.error('Tavsiya etilgan mahsulotni yuborishda xatolik:', error);
        }
      }
    }
  } catch (error) {
    console.error('Mahsulotlarni tekshirishda xatolik:', error);
  }
}

// Asosiy scheduler funksiyasi
export function startBlogScheduler(storage: IStorage): void {
  if (isSchedulerActive) {
    console.log('Blog scheduler allaqachon faol');
    return;
  }

  console.log('Blog scheduler ishga tushirilmoqda...');
  
  // Har soat 0-daqiqada (07:00 dan 19:00 gacha) blog post yaratish
  cron.schedule('0 7-19 * * *', async () => {
    console.log('Soatlik blog post yaratish vazifasi boshlandi...');
    
    try {
      // O'zbek va rus tillarini navbat bilan tanlash
      const currentHour = new Date().getHours();
      const language = currentHour % 2 === 0 ? 'uz' : 'ru';
      
      await createAndSaveBlogPost(storage, language);
    } catch (error) {
      console.error('Soatlik blog post yaratishda xatolik:', error);
    }
  }, {
    timezone: "Asia/Tashkent"
  });

  // Har kuni ertalab soat 9:00 da yangi mahsulotlarni tekshirish
  cron.schedule('0 9 * * *', async () => {
    console.log('Kunlik mahsulot tekshiruvi boshlandi...');
    
    try {
      await checkAndSendNewProducts(storage);
    } catch (error) {
      console.error('Kunlik mahsulot tekshiruvida xatolik:', error);
    }
  }, {
    timezone: "Asia/Tashkent"
  });

  // Kechqurun soat 18:00 da qo'shimcha mahsulot reklamasi
  cron.schedule('0 18 * * *', async () => {
    console.log('Kechki mahsulot reklamasi boshlandi...');
    
    try {
      const allProducts = await storage.getProducts();
      const activeProducts = allProducts.filter(p => p.isActive);
      
      if (activeProducts.length > 0) {
        const randomProduct = activeProducts[Math.floor(Math.random() * activeProducts.length)];
        const { sendProductToChannel } = await import('../services/telegram-bot');
        await sendProductToChannel(randomProduct);
        console.log(`Kechki reklama yuborildi: ${randomProduct.nameUz}`);
      }
    } catch (error) {
      console.error('Kechki reklama yuborishda xatolik:', error);
    }
  }, {
    timezone: "Asia/Tashkent"
  });

  isSchedulerActive = true;
  console.log('Blog scheduler muvaffaqiyatli ishga tushirildi!');
  console.log('- Blog postlar: har soat (07:00-19:00)');
  console.log('- Yangi mahsulotlar: har kuni 09:00');
  console.log('- Kechki reklama: har kuni 18:00');
}

// Scheduler'ni to'xtatish
export function stopBlogScheduler(): void {
  if (!isSchedulerActive) {
    console.log('Blog scheduler allaqachon to\'xtatilgan');
    return;
  }
  
  cron.getTasks().forEach((task, name) => {
    task.destroy();
  });
  
  isSchedulerActive = false;
  console.log('Blog scheduler to\'xtatildi');
}

// Test funksiyasi - darhol blog post yaratish
export async function createTestBlogPost(storage: IStorage, language: 'uz' | 'ru' = 'uz'): Promise<void> {
  console.log('Test blog post yaratilmoqda...');
  await createAndSaveBlogPost(storage, language);
}

// Scheduler statusini tekshirish
export function isSchedulerRunning(): boolean {
  return isSchedulerActive;
}